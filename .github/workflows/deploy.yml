name: Deploy to Digital Ocean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Deploy to Digital Ocean
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        password: ${{ secrets.DO_PASSWORD }}
        script: |
          # Navigate to root directory and clean up
          cd /root/
          
          # Force remove existing directory if it exists
          sudo rm -rf autofix-pro-digital-ocean-code || true
          
          # Clone the latest code
          git clone https://github.com/cmishler108/autofix-pro-digital-ocean-code.git
          cd autofix-pro-digital-ocean-code
          
          # Initialize and update submodules
          echo "Initializing submodules..."
          git submodule init
          echo "Updating submodules..."
          git submodule update --recursive
          
          echo "Current directory structure:"
          ls -la
          
          # Stop and delete all existing PM2 processes
          pm2 stop all || true
          pm2 delete all || true
          pm2 kill || true
          
          # Setup and run frontend
          cd fr
          
          # Check if package.json exists and install dependencies
          if [ -f "package.json" ]; then
            echo "Installing frontend dependencies..."
            npm install
            echo "Building frontend..."
            npm run build
          else
            echo "No package.json found in fr directory, checking doneez_front_end..."
            cd doneez_front_end
            npm install
            npm run build
            cd ..
          fi
          
          # Start frontend with PM2 (Next.js production server)
          pm2 start "npm start" --name "doneez-frontend" --cwd "/root/autofix-pro-digital-ocean-code/fr"
          
          # Setup and run backend
          cd ../DoneEZ
          
          # Verify requirements.txt exists
          echo "Checking requirements.txt..."
          ls -la requirements.txt
          cat requirements.txt
          
          # Install Python dependencies (ensure pip is up to date)
          echo "Upgrading pip..."
          python3 -m pip install --upgrade pip
          sudo python3 -m pip install --upgrade pip
          
          echo "Installing Python dependencies (user)..."
          python3 -m pip install --user -r requirements.txt
          
          echo "Installing Python dependencies (system-wide for PM2)..."
          sudo python3 -m pip install -r requirements.txt
          
          echo "Installing Django specifically to ensure it's available..."
          sudo python3 -m pip install Django==4.2.16
          sudo python3 -m pip install djangorestframework
          sudo python3 -m pip install psycopg2-binary
          
          echo "Verifying Python installation..."
          python3 --version
          python3 -c "import sys; print('Python path:', sys.path)"
          python3 -c "import django; print(f'Django version: {django.get_version()}')" || echo "Django import failed"
          pip3 list | grep -i django || echo "Django not found in pip list"
          
          # Change to Django project directory
          cd DoneEZ
          
          # Run migrations
          python3 manage.py migrate
          
          # Collect static files
          python3 manage.py collectstatic --noinput || true
          
          # Verify Django installation
          python3 -c "import django; print(f'Django version: {django.get_version()}')"
          
          # Stop any existing backend process
          pm2 stop doneez-backend || true
          pm2 delete doneez-backend || true
          
          # Start backend with PM2 (with full path and proper working directory)
          echo "Starting Django backend with PM2..."
          pm2 start "python3 manage.py runserver 0.0.0.0:8000" --name "doneez-backend" --cwd "/root/autofix-pro-digital-ocean-code/DoneEZ/DoneEZ"
          
          # Wait a moment and check if backend started successfully
          sleep 3
          pm2 status doneez-backend
          
          # Update nginx configuration
          cd /root/autofix-pro-digital-ocean-code
          sudo cp nginx.conf /etc/nginx/nginx.conf
          
          # Test and reload nginx
          sudo nginx -t && sudo systemctl reload nginx
          
          # Save PM2 configuration
          pm2 save
          pm2 startup